// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TTRBookings.Data;

namespace TTRBookings.Migrations
{
    [DbContext(typeof(TTRBookingsContext))]
    [Migration("20210112201702_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("TTRBookings.Entities.House", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("HouseCut")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RoseCut")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Houses");
                });

            modelBuilder.Entity("TTRBookings.Entities.Manager", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HouseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HouseId");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("TTRBookings.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HouseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RoseId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HouseId");

                    b.HasIndex("RoseId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("TTRBookings.Entities.Rose", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HouseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HouseId");

                    b.ToTable("Roses");
                });

            modelBuilder.Entity("TTRBookings.Entities.Tier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<Guid?>("RoseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoseId");

                    b.ToTable("Tiers");
                });

            modelBuilder.Entity("TTRBookings.Entities.TierRate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TierLists");
                });

            modelBuilder.Entity("TTRBookings.Entities.TimeSlot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TimeSlots");
                });

            modelBuilder.Entity("TTRBookings.Entities.Manager", b =>
                {
                    b.HasOne("TTRBookings.Entities.House", null)
                        .WithMany("Managers")
                        .HasForeignKey("HouseId");
                });

            modelBuilder.Entity("TTRBookings.Entities.Room", b =>
                {
                    b.HasOne("TTRBookings.Entities.House", null)
                        .WithMany("Rooms")
                        .HasForeignKey("HouseId");

                    b.HasOne("TTRBookings.Entities.Rose", "Rose")
                        .WithMany()
                        .HasForeignKey("RoseId");

                    b.Navigation("Rose");
                });

            modelBuilder.Entity("TTRBookings.Entities.Rose", b =>
                {
                    b.HasOne("TTRBookings.Entities.House", null)
                        .WithMany("Roses")
                        .HasForeignKey("HouseId");
                });

            modelBuilder.Entity("TTRBookings.Entities.Tier", b =>
                {
                    b.HasOne("TTRBookings.Entities.Rose", null)
                        .WithMany("Tiers")
                        .HasForeignKey("RoseId");
                });

            modelBuilder.Entity("TTRBookings.Entities.House", b =>
                {
                    b.Navigation("Managers");

                    b.Navigation("Rooms");

                    b.Navigation("Roses");
                });

            modelBuilder.Entity("TTRBookings.Entities.Rose", b =>
                {
                    b.Navigation("Tiers");
                });
#pragma warning restore 612, 618
        }
    }
}
