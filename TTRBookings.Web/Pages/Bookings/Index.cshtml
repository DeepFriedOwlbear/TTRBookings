@page
@model IndexModel
@{
    ViewData["Title"] = "Bookings";
}

<table id="myTable" class="table table-hover">
    <thead class="thead-dark">
        <tr>
            <th>Booked Room</th>
            <th>Details Page</th>
        </tr>
    </thead>
    @foreach (var booking in Model.Bookings)
    {
        <!--FORM POST VERSION-->
        <tr>
            <td>@booking.Room.Name</td>
            <td>
                <a asp-page="./Details" asp-route-id="@booking.Id">Details</a> |
                <form id="deleteEntry_@booking.Id" asp-page="./Delete" method="post">
                    <input id="bookingId" name="bookingId" asp-for="@booking.Id" type="hidden" />
                    <button type="submit">Delete</button>
                </form>
            </td>
        </tr>
        <!--END OF FORM POST VERSION-->

        <!--OLD VERSION-->
        <!--
        <tr>
            <td>@booking.Room.Name</td>
            <td>
                <a asp-page="./Details" asp-route-id="@booking.Id">Details</a> | <a id="deleteEntry" asp-page="./Delete" asp-route-id="@booking.Id">Delete</a>
            </td>
        </tr>-->
        <!--END OF OLD VERSION-->
    }
</table>

@section Scripts
{
    <script type="text/javascript">
        //FORM POST VERSION
        //TODO - there's a Content-Type mismatch so form doesn't get processed in Delete.cshtml.cs.

        const delBtns = document.querySelectorAll('[id^="deleteEntry_"]');

        for (let i = 0; i < delBtns.length; i++) {
            delBtns[i].addEventListener('submit', function () {
                event.preventDefault();
                const formData = Object.fromEntries(new FormData(delBtns[i]).entries());

                fetchData(formData);
                //deleteRow(delBtns[i]);
            });
        }

        async function fetchData(formData) {
            let formDataJSON = JSON.stringify(formData)
            let formDataParsed = JSON.parse(formDataJSON);
            let token = formDataParsed['__RequestVerificationToken'];

            console.log("FormData: " + JSON.stringify(formData));
            console.log("Token: " + token);

            await fetch('../Bookings/Delete', {
                method: 'POST',
                headers: {
                    //'Content-Type': 'application/json',
                    "RequestVerificationToken": token
                },
                body: formDataJSON
            }).then(function (response) {
                console.log(response.text());
            }).catch(function (error) {
                console.log(error);
            });
        }

        function deleteRow(button) {
            var row = button.parentNode.parentNode.parentNode;
            row.parentNode.removeChild(row);
        }
        //END OF FORM POST VERSION

        //OLD VERSION (No Form Post)
        //const delBtns = document.querySelectorAll('#deleteEntry');

        //for (let i = 0; i < delBtns.length; i++) {
        //    delBtns[i].addEventListener('click', function () {
        //        event.preventDefault()

        //        if (confirm("Are you sure you want to delete this entry?") == true) {
        //            fetchData(delBtns[i].getAttribute("href"), delBtns[i]);
        //        }
        //    });
        //}

        //async function fetchData(url, button) {
        //    //console.log("Posted URL: "+url);
        //    let response = await fetch(url);
        //    let data = await response.text();
        //    //console.log("Response: " + data);

        //    var obj = JSON.parse(data);
        //    if (obj["success"] == true) {
        //        var row = button.parentNode.parentNode;
        //        row.parentNode.removeChild(row);
        //    }
        //    else {
        //        alert("Entry could not be deleted.");
        //    }
        //}

        //function deleteRow(button) {
        //    var row = button.parentNode.parentNode;
        //    row.parentNode.removeChild(row);
        //}
        //END OF OLD VERSION

    </script>
    <!--Clicked delete, if response from post to delete onpost method == success = true,
        then delete this entry from the frontend UI-->
    <!--Clicked delete, if response from post to delete onpost method == success = false,
        then display error message to user,
        hint crappy way is to use "alert('message')" frontend UI-->

}