@page
@model TTRBookings.Web.Pages.Bookings.EditModel

<h2>Details</h2>
<br />

<form asp-page="./Edit" method="post" class="needs-validation" novalidate>
    <fieldset id="FormFieldset" class="p-3 mb-2 bg-secondary text-white" disabled>
        <input asp-for="BookingVM.Id" type="hidden" />
        <div class="form-row">
            <div class="col">
                <label asp-for="BookingVM.Staff.Name">Staff</label>
                <select class="custom-select" asp-for="BookingVM.Staff.Id" asp-items="Model.StaffList" required></select>
                <div class="invalid-feedback">
                    Please provide a Staff.
                </div>
                <div class="valid-feedback">
                    Looks good!
                </div>
            </div>
            <div class="col">
                <label asp-for="BookingVM.Room.Name">Room</label>
                <select class="custom-select" asp-for="BookingVM.Room.Id" asp-items="Model.RoomList" required></select>
                <div class="invalid-feedback">
                    Please provide a Room.
                </div>
                <div class="valid-feedback">
                    Looks good!
                </div>
            </div>
            <div class="col">
                <label asp-for="BookingVM.Tier.Rate"></label>
                <input class="form-control" asp-for="BookingVM.Tier.Rate" step="10000" type="number" min="0" placeholder="Please select a Rate" required />
                <div class="invalid-feedback">
                    Please provide a Rate.
                </div>
                <div class="valid-feedback">
                    Looks good!
                </div>
            </div>
        </div><br />
        <div class="form-row">
            <div class="col">
                <label asp-for="BookingVM.TimeSlot.Start">Start Time</label>
                <input type="text" class="form-control" asp-for="BookingVM.TimeSlot.Start" placeholder="Please select Date Time" required />
                <div class="invalid-feedback">
                    Please provide a Start Date.
                </div>
                <div class="valid-feedback">
                    Looks good!
                </div>
            </div>
            <div class="col">
                <label asp-for="BookingVM.TimeSlot.End">End Time</label>
                <input type="text" class="form-control" asp-for="BookingVM.TimeSlot.End" placeholder="Please select Date Time" required />
                <div class="invalid-feedback">
                    Please provide an End Date.
                </div>
                <div class="valid-feedback">
                    Looks good!
                </div>
            </div>
        </div>
    </fieldset>

    <div class="form-row">
        <div class="col-auto">
            <button type="button" id="unlockFormButton" class="btn btn-secondary">Edit</button>
        </div>
        <div class="col-auto">
            <button type="submit" id="submitButton" class="btn btn-success" hidden>Save Changes</button>
        </div>
    </div>
</form>
<br/>
<form id="deleteEntry_@Model.BookingVM.Id" asp-controller="Bookings" asp-action="Delete" method="post" style="display: inline;">
    <input id="bookingId" name="bookingId" asp-for="@Model.BookingVM.Id" type="hidden" />
    <button type="submit" class="btn btn-danger">Delete Booking</button>
</form>

@section Scripts
{
<script type="text/javascript">
    //Toastr Error display
    var toastrErrors = [];
    @foreach (var d in Model.ToastrErrors)
    {
        //@:toastrErrors.push("@d");
        @:toastr.error("@d.Value", "@d.Key");
    }

    //Flatpickr Setup
    $("#BookingVM_TimeSlot_Start").flatpickr();
    $("#BookingVM_TimeSlot_End").flatpickr();

    //Add js-event for locking/unlocking to edit button
    let el = document.getElementById("unlockFormButton");
    el.addEventListener("click", UnlockFieldset);

    //TODO - Change Values (BookingVM_XXX_XXX) here when all values are renamed for portfolio
    //Save original values
    let originalStaff = document.getElementById("BookingVM_Staff_Id").value;
    let originalRoom = document.getElementById("BookingVM_Room_Id").value;
    let originalTier = document.getElementById("BookingVM_Tier_Rate").value;
    let originalTimeStart = document.getElementById("BookingVM_TimeSlot_Start").value;
    let originalTimeEnd = document.getElementById("BookingVM_TimeSlot_End").value;

    //Unlock Fieldset within Form
    function UnlockFieldset() {
        //Set default format for moment.js and parse DateTimes to comparable formats
        moment.defaultFormat = "DD.MM.YYYY HH:mm";
        var originalTimeParsed = moment(originalTimeStart, moment.defaultFormat).toDate();
        var currentTimeParsed = moment(new Date(), moment.defaultFormat).toDate();

        //Only allow editing of bookings that haven't happened yet
        if (originalTimeParsed < currentTimeParsed) {
            toastr.warning("Can't edit past Bookings.", "Old Booking");
        }
        else {
            let unlockButton = document.getElementById("unlockFormButton");
            let fieldset = document.getElementById("FormFieldset");

            //If fieldset is disabled, enable the fieldset
            if (fieldset.disabled == true) {
                fieldset.disabled = false;
                fieldset.className = "p-3 mb-2";
                unlockButton.textContent = "Cancel";
                unlockButton.className = "btn btn-danger";
                document.getElementById("submitButton").hidden = false;
            }
            //if fieldset is enabled, disable the fieldset and load original values
            else {
                fieldset.disabled = true;
                fieldset.className = "p-3 mb-2 bg-secondary text-white";
                unlockButton.textContent = "Edit";
                unlockButton.className = "btn btn-secondary";
                document.getElementById("submitButton").hidden = true;

                document.getElementById("BookingVM_Staff_Id").value = originalStaff;
                document.getElementById("BookingVM_Room_Id").value = originalRoom;
                document.getElementById("BookingVM_Tier_Rate").value = originalTier;
                document.getElementById("BookingVM_TimeSlot_Start").value = originalTimeStart;
                document.getElementById("BookingVM_TimeSlot_End").value = originalTimeEnd;

                $("#BookingVM_TimeSlot_Start").flatpickr().setDate(originalTimeStart);
                $("#BookingVM_TimeSlot_End").flatpickr().setDate(originalTimeEnd);
            }
        }
    }

    document.querySelectorAll('[id^="deleteEntry_"]')
        .forEach((element) => {
            element.addEventListener("submit", function () {
                handleFormSubmit(event, RemoveFromUI);
            });
        });

    function RemoveFromUI(success, formData) {
        if (success) {
            window.location.replace("/Bookings/");
        }
        else {
            alert("Entry could not be deleted.");
        }
    }
</script>
}