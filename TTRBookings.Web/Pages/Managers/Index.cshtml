@page
@model IndexModel
@{
    ViewData["Title"] = "Managers";
}

<table class="table table-hover">
    <thead class="thead-dark">
        <tr>
            <th>Managers</th>
            <th>Options</th>
        </tr>
    </thead>
    @foreach (var manager in Model.Managers)
    {
        <tr>
            <td>@manager.Name</td>
            <td>
                <a asp-page="./Details" asp-route-id="@manager.Id" class="btn btn-primary btn-sm">Details</a>
                <form id="deleteEntry_@manager.Id" asp-controller="Managers" asp-action="Delete" method="post" style="display: inline;">
                    <input id="managerId" name="managerId" asp-for="@manager.Id" type="hidden" />
                    <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                </form>
            </td>
        </tr>
    }
</table>

@section Scripts
{
    <script type="text/javascript">
        //see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch
        //see https://simonplend.com/how-to-use-fetch-to-post-form-data-as-json-to-your-api/

        //TODO - Make other Pages use the handleFormSubmit too

        document.querySelectorAll('[id^="deleteEntry_"]')
            .forEach((element) => {
                element.addEventListener("submit", function () {
                    handleFormSubmit(event, RemoveFromUI);
                });
            });

        function RemoveFromUI(success, formData) {
            if (success) {
                console.log("ID: ", formData.get('managerId'));

                let form = document.getElementById("deleteEntry_" + formData.get('managerId'));
                console.log("FormID: ", form.id);

                var row = form.parentNode.parentNode;
                row.parentNode.removeChild(row);
            }
            else {
                alert("Entry could not be deleted.");
            }
        }

    </script>
}